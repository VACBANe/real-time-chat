{"version":3,"sources":["components/Login.js","components/Loader.js","components/Chat.js","utils/consts.js","components/AppRouter.js","components/Navbar.js","App.js","index.js"],"names":["Login","auth","useContext","Context","login","a","provider","firebase","GoogleAuthProvider","signInWithPopup","user","console","log","className","style","height","onClick","Loader","Chat","containerRef","useRef","firestore","useAuthState","useState","value","setValue","useCollectionData","collection","orderBy","messages","loading","useEffect","current","element","scroll","top","scrollHeight","behavior","sendMessage","add","uid","displayName","photoURL","text","createdAt","FieldValue","serverTimestamp","ref","width","overflowY","map","message","marginLeft","wordWrap","maxWidth","minWidth","src","alt","left","marginRight","onChange","e","target","LOGIN_ROUTE","CHAT_ROUTE","AppRouter","path","component","exact","to","Navbar","signOut","App","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","createContext","ReactDOM","render","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.5b8ca4eb.chunk.js","sourcesContent":["import React, { useContext } from \"react\";\r\nimport { Context } from \"..\";\r\nimport firebase from \"firebase\";\r\n\r\nconst Login = () => {\r\n    const { auth } = useContext(Context);\r\n\r\n    const login = async () => {\r\n        const provider = new firebase.auth.GoogleAuthProvider();\r\n        const user = await auth.signInWithPopup(provider);\r\n        console.log(user);\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"d-flex align-items-center justify-content-center\" style={{height: \"80vh\"}}>\r\n                <div>\r\n                    <button className=\"btn btn-primary\" onClick={login}>\r\n                        Войти с помощью Google\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport \"../App.css\";\r\nconst Loader = () => {\r\n    return (\r\n        <div className=\"d-flex justify-content-center align-items-center\" style={{height: \"80vh\"}}>\r\n            <div className=\"lds-hourglass\"></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Loader;\r\n","import React, { useContext, useState, useEffect, useRef } from \"react\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport { useCollectionData } from \"react-firebase-hooks/firestore\";\r\nimport { Context } from \"..\";\r\nimport Loader from \"./Loader\";\r\nimport firebase from \"firebase\";\r\n\r\nconst Chat = () => {\r\n    const containerRef = useRef(null);\r\n    const { auth, firestore } = useContext(Context);\r\n    const [user] = useAuthState(auth);\r\n    const [value, setValue] = useState(\"\");\r\n    const [messages, loading] = useCollectionData(\r\n        firestore.collection(\"messages\").orderBy(\"createdAt\")\r\n    );\r\n    useEffect(() => {\r\n        if (containerRef && containerRef.current) {\r\n            const element = containerRef.current;\r\n            element.scroll({\r\n                top: element.scrollHeight,\r\n                behavior: \"smooth\",\r\n            });\r\n        }\r\n    }, [containerRef, messages]);\r\n\r\n    const sendMessage = async () => {\r\n        firestore.collection(\"messages\").add({\r\n            uid: user.uid,\r\n            displayName: user.displayName,\r\n            photoURL: user.photoURL,\r\n            text: value,\r\n            createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n        });\r\n        setValue(\"\");\r\n    };\r\n    if (loading) {\r\n        return <Loader />;\r\n    }\r\n    return (\r\n        <div className={\"container pt-4\"}>\r\n            <div className=\"row d-flex justify-content-center\">\r\n                <div\r\n                    className=\"border border-2 border-primary rounded-3 pt-3\"\r\n                    ref={containerRef}\r\n                    style={{\r\n                        width: \"80%\",\r\n                        height: \"70vh\",\r\n                        overflowY: \"auto\",\r\n                    }}\r\n                >\r\n                    {messages.map((message) => (\r\n                        <div\r\n                            className=\"border border-2 border-primary rounded p-3 mb-3\"\r\n                            style={{\r\n                                marginLeft:\r\n                                    user.uid === message.uid ? \"auto\" : \"10px\",\r\n                                width: \"fit-content\",\r\n                                wordWrap: \"break-word\",\r\n                                maxWidth: \"40%\",\r\n                                minWidth: \"20%\",\r\n                            }}\r\n                        >\r\n                            <div className=\"d-flex align-items-center mb-3\">\r\n                                <img\r\n                                    src={message.photoURL}\r\n                                    className=\"rounded-3\"\r\n                                    alt=\"avatar\"\r\n                                    style={{\r\n                                        left: 0,\r\n                                        width: \"50px\",\r\n                                        marginRight: \"20px\",\r\n                                    }}\r\n                                />\r\n                                <div>{message.displayName}</div>\r\n                            </div>\r\n                            <div>{message.text}</div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                <div\r\n                    className=\"d-flex pt-4\"\r\n                    style={{ width: \"82%\", height: \"13vh\"}}\r\n                >\r\n                    <textarea\r\n                        className=\"form-control\"\r\n                        value={value}\r\n                        onChange={(e) => setValue(e.target.value)}\r\n                    />\r\n                    <button className=\"btn btn-primary\" onClick={sendMessage}>\r\n                        Отправить\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Chat;\r\n","export const LOGIN_ROUTE = '/login'\r\nexport const CHAT_ROUTE = '/chat'","import React, { useContext } from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router\";\r\nimport { Context } from \"..\";\r\nimport Login from \"./Login\";\r\nimport Chat from \"./Chat\";\r\nimport { CHAT_ROUTE, LOGIN_ROUTE } from \"../utils/consts\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\n\r\nconst AppRouter = () => {\r\n    const { auth } = useContext(Context);\r\n    const [user] = useAuthState(auth);\r\n    return user ? (\r\n        <Switch>\r\n            <Route path={CHAT_ROUTE} component={Chat} exact={true} />\r\n            <Redirect to={CHAT_ROUTE} />\r\n        </Switch>\r\n    ) : (\r\n        <Switch>\r\n            <Route path={LOGIN_ROUTE} component={Login} exact={true} />\r\n            <Redirect to={LOGIN_ROUTE} />\r\n        </Switch>\r\n    );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React, {useContext} from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { LOGIN_ROUTE } from \"../utils/consts\";\r\nimport { Context } from '..';\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\n\r\nconst Navbar = () => {\r\n    const {auth} = useContext(Context);\r\n    const [user] = useAuthState(auth);\r\n\r\n    return (\r\n        <nav className=\"navbar position-relative navbar-dark bg-primary\">\r\n                <div className=\"container justify-content-end\">\r\n                    {user ? (\r\n                        <button className=\"btn btn-primary\" onClick={() => auth.signOut()}>Выйти</button>\r\n                    ) : (\r\n                        <NavLink to={LOGIN_ROUTE}>\r\n                            <button className=\"btn btn-outline-light\">Логин</button>\r\n                        </NavLink>\r\n                    )}\r\n                </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Navbar;\r\n","import { useContext } from \"react\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Context } from \".\";\nimport \"./App.css\";\nimport AppRouter from \"./components/AppRouter\";\nimport Loader from \"./components/Loader\";\nimport Navbar from \"./components/Navbar\";\n\nfunction App() {\n    const {auth} = useContext(Context);\n    const [user, loading] = useAuthState(auth);\n    if(loading) {\n        return <Loader/>;\n    }\n    return (\n        <BrowserRouter>\n            <Navbar/>\n            <AppRouter/>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","import React, { createContext } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport firebase from \"firebase\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\nfirebase.initializeApp({\n    apiKey: \"AIzaSyBeRXnGO53qMH6Btd7FIB27pkqC_UYCvVA\",\n    authDomain: \"real-time-chat-39313.firebaseapp.com\",\n    projectId: \"real-time-chat-39313\",\n    storageBucket: \"real-time-chat-39313.appspot.com\",\n    messagingSenderId: \"152608046314\",\n    appId: \"1:152608046314:web:97ae6d3262563563b9ab93\",\n});\n\nexport const Context = createContext(null);\n\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\n\nReactDOM.render(\n    <Context.Provider value={{\n        firebase,\n        auth,\n        firestore\n    }}>\n        <App />\n    </Context.Provider>,\n    document.getElementById(\"root\")\n);"],"sourceRoot":""}